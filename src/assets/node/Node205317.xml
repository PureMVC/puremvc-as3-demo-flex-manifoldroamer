<?xml version="1.0" encoding="UTF-8"?>
<Node id="205317" name="Login" thumb="box">	
	<NodeMap>
		<Project 
			name="Login Demo for AS3" 
			status="Production"
			repo="Demo_AS3_Flex_WebORB_Login" 
			tag="Login_1_5_1"
			version="1.5.1"
			archive="AS3/Demo_AS3_Flex_WebORB_Login.zip" 
			srcview="http://puremvc.org/pages/demos/AS3/Demo_AS3_Flex_WebORB_Login/srcview"
			live="http://www.websector.de/blog/2007/08/10/another-weborb-for-php-login-sample-using-flex-and-puremvc/"
			forum="topic=172.0"
			owner="Jens Krause"
			owner_node="318"
			pic="PureMVC-Framework-AS3-Std.png"
			shot="PureMVC-Shot-AS3-Flex-Login.png">
			
<Description><![CDATA[
This demo illustrates the use of WebORB with PureMVC to perform a simple login from a Flex client. 
]]></Description>						

<ReleaseNotes><![CDATA[
<B>Summary of Changes in 1.5.1</B>
<UL><LI>Removed unused instance of LoginVO within LoginPanel</LI></UL>

<B>Summary of Changes in 1.5</B>
<UL><LI>Refactored using Commands and Notifications as simple as possible  </LI>
<LI>WorkFlowStateCommandes removed. There is no need anymore.</LI>
<LI>pdated using PureMVC v. 2.0.3 without any modification of its code</LI></UL>

<B>Summary of Changes in 1.4</B>
<UL><LI>Updated using PureMVC v. 2.0.1 </LI></UL>

<B>Summary of Changes in 1.3</B>
<UL><LI>Removed unneeded getMedatorName calls and corrected LOGIN_SUCCESS constant</LI></UL>

<B>Summary of Changes in 1.2</B>
<UL><LI>Refactored for using PureMVC v. 2.0</LI></UL>

<B>Summary of Changes in 1.1</B>
<UL><LI>Updated to PureMVC 1.7 </LI>
<LI>Made several best practice-related changes</LI></UL>

<B>Features in Version 1.0</B>
<UL><LI>Performing a remote login operation</LI>
<LI>Communication with WebORB for PHP</LI></UL>

<U>Discussion</U>
<UL><LI>In my previous article I’ve published a tutorial about <font color="#0000FF"><A href="http://www.websector.de/blog/2007/08/08/weborb-for-php-login-example-using-flex-3-and-caingorm-221/" target="_blank">WebORB for PHP using Flex and Caingorm.</A></font></LI>
<LI>Today I’ll give you a further WebORB for PHP sample which based also on a Login application using PureMVC instead of Cairngorm.</LI></UL>
]]></ReleaseNotes>						

<Installation><![CDATA[
<B>Installing the Project Source Code</B>
<U>From the archive</U>
<UL><LI>Download the latest source code archive.</LI>
<LI>Unzip the source code zip to any folder on your disk.</LI> 
<LI>For instance: c:\development\</LI>
<LI>You will see a Login_X_Y (where X_Y is version) source folder.</LI> 
<LI>For instance: c:\development\Login_X_Y</LI></UL>
<U>From the Repository</U>
<UL><LI>Use your  favorite SVN client to retrieve the latest source code release from the repository.</LI></UL>
<U>Add the Services</U>
<UL><LI>The Service layer is written in PHP for use with WebORB PHP, but it should also work with very little changes with others AMF PHP Gateways like AMFPHP1.9 or SabreAMF.</LI>
<LI>Copy all files located in folder named "Services" into {yourWebORBInstallationFolder}/Weborb/Services/ </LI></UL>
</LI></UL>

<U>Setup and Compile the Demo Using Flex Builder 3</U>
<UL><LI>Create a new Flex Project called 'Login' in Flex Builder 3, pointing to the new Login_X_Y source folder.</LI>
<LI>Add the required libraries to the project's build path.</LI>
<LI>From the Flex Builder menu do: Project -> Properties -> Flex Build Path -> Library Path -> Add SWC Folder</LI>
<LI>Browse and select: Login/libs</LI>
<LI>And on the Flex Compiler tab, add to additional compiler arguments : -services "services-config.xml"</LI> 
<LI>Run Login.mxml</LI></UL>  
]]></Installation>												

		</Project>
	</NodeMap>
</Node>