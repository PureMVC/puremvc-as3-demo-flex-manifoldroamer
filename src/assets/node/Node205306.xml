<?xml version="1.0" encoding="UTF-8"?>
<Node id="205306" name="Cafe Townsend" thumb="box">	
	<NodeMap>
		<Project 
			name="Cafe Townsend Demo for AS3" 
			status="Production"
			repo="Demo_AS3_Flex_CafeTownsend" 
			tag="CafeTownsend_1_3"
			version="1.3"
			archive="AS3/Demo_AS3_Flex_CafeTownsend.zip" 
			srcview="http://puremvc.org/pages/demos/AS3/Demo_AS3_Flex_CafeTownsend/srcview"
			live="AS3/Demo_AS3_Flex_CafeTownsend/"
			forum="topic=1515.0"
			owner="Michael Ramirez"
			owner_node="324"
			pic="PureMVC-Framework-AS3-Std.png"
			shot="PureMVC-Shot-AS3-Flex-CafeTownsend.png">
			
<Description><![CDATA[
This demo was originally written for Cairngorm, another framework for Flex. It illustrates the handling of routine maintenance tasks on the client. 
]]></Description>						

<ReleaseNotes><![CDATA[
<B>Summary of Changes in 1.3</B>
<UL><LI>Updated to 2.0.1 release of PureMVC</LI></UL>

<B>Summary of Changes in 1.2</B>
<UL><LI>For much of the time that the original demo was available, the differences in the packaging from the normal PureMVC-style packaging threw off a lot of people who didn't know or care about Cairngorm packaging. This made it confusing to them to figure out what the recommended packaging was, and so version 1.2 (in the repository under tags/CafeTownsend_1_2) has been refactored to the recommended PureMVC pacakging structure. Essentially this means moving the business and vo packages under the model folder, leaving model, view and controller folders at the main application node of the package structure.</LI></UL>

<B>Summary of Changes in 1.1</B>
<UL><LI>It was later migrated to work with PureMVC 2.0.</LI></UL>

<B>Features in Version 1.0</B>
<UL><LI>A port of the <font color="#0000FF"><A href="http://cairngormdocs.org/blog/?p=19" target="_blank">Cairngorm Cafe Townsend Demo</A></font></LI>
<LI>How to quickly re-implement a Cairngorm-based solution in PureMVC</LI>
<LI>Use of a Business Delegate class in PureMVC, with a Proxy as the responder rather than a Command.</LI>
<LI>How to do perform routine maintenance tasks on the client </LI></UL>

<U>Discussion</U>
<UL><LI>To learn the differences between PureMVC and Cairngorm, Michael ported the Cairngorm 'CafeTownsend' demo. In converting it over, he made it easy for those familiar to Cairngorm to understand PureMVC by packaging everything in a Cairngorm-familiar way. </LI>
<LI>If you browse the repository, you can compare and contrast the two structures, and see how you would port a Cairngorm app, not just to work with PureMVC, but into the expected package structure that other PureMVC developers will expect. As they say, when in Rome, do as the Romans do.</LI></UL> 
]]></ReleaseNotes>						

<Installation><![CDATA[
<B>Installing the Project Source Code</B>
<U>From the archive</U>
<UL><LI>Download the latest source code archive.</LI>
<LI>Unzip the source code zip to any folder on your disk.</LI> 
<LI>For instance: c:\development\</LI>
<LI>You will see a CafeTownsend_X_Y (where X_Y is version) source folder.</LI> 
<LI>For instance: c:\development\CafeTownsend_X_Y</LI></UL>
<U>From the Repository</U>
<UL><LI>Use your  favorite SVN client to retrieve the latest source code release from the repository.</LI></UL>   
<U>Setup and Compile the Demo Using Flex Builder 3</U>
<UL><LI>Create a new Flex Project called 'CafeTownsend' in Flex Builder 3, pointing to the new CafeTownsend_X_Y source folder.</LI>
<LI>Add the required libraries to the project's build path.</LI>
<LI>From the Flex Builder menu do: Project -> Properties -> Flex Build Path -> Library Path -> Add SWC Folder</LI>
<LI>Browse and select: CafeTownsend/libs</LI>
<LI>Run CafeTownsend.mxml</LI></UL>  
]]></Installation>												

		</Project>
	</NodeMap>
</Node>